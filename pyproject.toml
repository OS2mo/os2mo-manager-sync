# SPDX-FileCopyrightText: 2022 Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0

[tool.poetry]
name = "sd-managerscript"
version = "0.0.0" # versioning handled by conventional commits
description = ""
authors = ["Magenta ApS <info@magenta.dk>"]
readme = "README.md"
homepage = "https://magenta.dk/"
repository = "https://git.magenta.dk/rammearkitektur/os2mo-manager-sync"
keywords = ["os2mo", "manager", "sync"]
license = "MPL-2.0"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = {version = "^1", extras=["email"]}
more-itertools = "^9"
uvicorn = "^0.34"
structlog = "^24"
fastramqpi = "^12"
psycopg2 = "^2"
websockets = "^13" # for ariadne
httpx = "^0.27"
fastapi = "^0.115"
starlette = "^0.41"

[tool.poetry.group.pre-commit.dependencies]
pre-commit = "^3"
ruff = "^0.9"
deptry = "^0.23"
mypy = "^1"
pyupgrade = "^3"

[tool.poetry.group.test.dependencies]
pytest = "^8"
pytest-asyncio = "^0.23"
pytest-cov = "^4"
pytest-split = "^0.8"
hypothesis = "^6"
freezegun = "^1"
asgi-lifespan = "^2.1"

[tool.poetry.group.dev.dependencies]
ariadne-codegen = "^0.7"
fastramqpi = "^12.4.1"

[tool.mypy]
plugins = "pydantic.mypy, pydantic.v1.mypy"

[tool.ariadne-codegen]
target_package_name = "autogenerated_graphql_client"
target_package_path = "sd_managerscript/"
client_name = "GraphQLClient"
schema_path = "schema.graphql"  # curl -O http://localhost:5000/graphql/v25/schema.graphql
queries_path = "queries.graphql"
include_all_inputs = false
include_all_enums = false
include_comments = false
plugins = [
    # Return values directly when only a single top field is requested
    "ariadne_codegen.contrib.shorter_results.ShorterResultsPlugin",
    # Add UNSET and UnsetType to generated input types
    "fastramqpi.ariadne.UnsetInputTypesPlugin",
]
[tool.ariadne-codegen.scalars.DateTime]
type = "datetime.datetime"
parse = "fastramqpi.ariadne.parse_graphql_datetime"
[tool.ariadne-codegen.scalars.UUID]
type = "uuid.UUID"

[tool.pytest.ini_options]
asyncio_mode="auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
extend-select = [
    # isort
    "I"
]
ignore = [
  # Allow function calls in arguments, like `Depends(...)`
  "B008",
  # Allow lines longer than 90 characters if ruff-format decides so
  "E501"
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.deptry.per_rule_ignores]
DEP002 = [
  # uvicorn is used by the Dockerfile
  "uvicorn",
  # psycopg2 is used as a string in the postgres connector
  "psycopg2",
]
